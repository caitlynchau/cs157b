/*
**
** SAMPLE: How to get information at the table level
**
** SQL STATEMENTS USED:
**         SELECT
**         DECLARE CURSOR
**         OPEN
**         FETCH
**         CLOSE
**
** OUTPUT FILE: tbinfo.out (available in the online documentation)
*****************************************************************************
**
** For more information on the sample programs, see the README file.
**
** For information on developing C applications, see the Application
** Development Guide.
**
** For information on using SQL statements, see the SQL Reference.
**
** For the latest information on programming, building, and running DB2 
** applications, visit the DB2 application development website: 
**     http://www.software.ibm.com/data/db2/udb/ad
****************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sqlenv.h>
#include <sqlutil.h>
// #include "utilemb.h"


// function declarations
int TbSchemaNameGet(void);
int TbColumnInfoGet(void);
int GetOrgInfo(void);
int GetStaffInfo(void);

EXEC SQL BEGIN DECLARE SECTION;
  char tableName[128];
  char schemaName[128];

  sqlint32 deptNumber;
  char deptName[20];
  sqlint32 manager;
  char division[20];
  char location[20];

  
  sqlint32 id;
  char name[20];
  sqlint32 dept;
  char job[20];
  sqlint32 years;
  float salary;
  float comm;

  short commNullInd;
  short yearNullInd;

  char dbAlias[15];
  char user[129];
  char pswd[15];
EXEC SQL END DECLARE SECTION;

int main(int argc, char *argv[])
{
  int rc = 0;
  struct sqlca sqlca;

  
  /* check the command line arguments */
  if (argc < 2)
  {
//    printf("Usage sample2 dbAlias, userId, password");
    printf("Usage sample2 dbAlias");
  }
  else
  {
    strcpy(dbAlias, argv[1]);
//    strcpy(user, argv[2]);
//    strcpy(pswd, argv[3]);

    printf("\nTHIS SAMPLE SHOWS HOW TO GET INFORMATION AT THE TABLE LEVEL.\n");

    /* connect to the database */
    printf("\n  Connecting to '%s' database...\n", dbAlias);
    
/*     EXEC SQL CONNECT TO :dbAlias USER :user USING :pswd; */

    EXEC SQL CONNECT TO :dbAlias;
  
    printf("  Connected to '%s' database.\n", dbAlias);

    // table 1: Org
    strcpy(tableName, "ORG");
    rc = TbSchemaNameGet();
    rc = GetOrgInfo();

    // table 2: Staff
    strcpy(tableName, "STAFF");
    rc = TbSchemaNameGet();
    rc = GetStaffInfo();

    strcpy(tableName, "STAFF");
    rc = JoinTables();

    // table 3: Join Org and Staff
    

    /* disconnect from the database */
    EXEC SQL CONNECT RESET;
  }
    return 0;
} /* end main */

int TbSchemaNameGet(void)
{
  struct sqlca sqlca;

  EXEC SQL SELECT tabschema INTO :schemaName
    FROM syscat.tables
    WHERE tabname = :tableName;
/*  EMB_SQL_CHECK("Table schema name -- Get"); */

  /* get rid of spaces from the end of schemaName */
  strtok(schemaName, " ");

  printf("\n  Table schema name is: %s\n", schemaName);

  return 0;
} /* TbSchemaNameGet */


int GetOrgInfo(void)
{
  struct sqlca sqlca;

  printf("\n-----------------------------------------------------------");

  /* get info for table columns */
  printf("\n  Get info for '%s.%s':\n",
         schemaName, tableName);
  printf("\nDEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION\n");
  printf("-------- -------------- ------- ---------- -------------\n");

  EXEC SQL DECLARE orgCursor CURSOR FOR
    SELECT deptnumb, deptname, manager, division, location
      FROM org;


  EXEC SQL OPEN orgCursor;
  /* EMB_SQL_CHECK("Cursor -- Open"); */

  EXEC SQL FETCH orgCursor INTO :deptNumber, :deptName, :manager, :division, :location;
  /* EMB_SQL_CHECK("Cursor -- Fetch"); */

  if (sqlca.sqlcode == 100)
  {
    printf("\n  Data not found.\n");
  }

  while (sqlca.sqlcode != 100)
  {
    printf("%8d %-14.14s %7d %-10.10s %-13.13s\n", deptNumber, deptName, manager, division, location);

    EXEC SQL FETCH orgCursor INTO :deptNumber, :deptName, :manager, :division, :location;
    /* EMB_SQL_CHECK("Cursor -- Fetch"); */
  }

  EXEC SQL CLOSE orgCursor;
  /* EMB_SQL_CHECK("Cursor -- Close"); */
  
  return 0;
} /* GetOrgInfo */

int GetStaffInfo(void)
{
  struct sqlca sqlca;

  printf("\n-----------------------------------------------------------");

  /* get info for table columns */
  printf("\n  Get info for '%s.%s':\n",
         schemaName, tableName);
  printf("\nID     NAME      DEPT   JOB   YEARS  SALARY    COMM\n");
  printf("------ --------- ------ ----- ------ --------- ---------\n");

  EXEC SQL DECLARE staffCursor CURSOR FOR
    SELECT id, name, dept, job, years, salary, comm
      FROM staff;


  EXEC SQL OPEN staffCursor;
  /* EMB_SQL_CHECK("Cursor -- Open"); */

  EXEC SQL FETCH staffCursor INTO :id, :name, :dept, :job, :years:yearNullInd, :salary, :comm:commNullInd;
  /* EMB_SQL_CHECK("Cursor -- Fetch"); */

  if (sqlca.sqlcode == 100)
  {
    printf("\n  Data not found.\n");
  }

  while (sqlca.sqlcode != 100)
  {
    printf("%6d %-9.9s %6d %-5.5s ", id, name, dept, job);
    if (yearNullInd == -1) {
      printf("     - ") ;
    } else {
      printf("%6d ", years);
    }
    printf("%9.2f ", salary);
    if (commNullInd == -1) {
      printf("        - ");
    } else {
      printf("%9.2f", comm);
    }
    printf("\n");

    EXEC SQL FETCH staffCursor INTO :id, :name, :dept, :job, :years:yearNullInd, :salary, :comm:commNullInd;
    /* EMB_SQL_CHECK("Cursor -- Fetch"); */ 
  }

  EXEC SQL CLOSE staffCursor;
  /* EMB_SQL_CHECK("Cursor -- Close"); */
  
  return 0;
} /* GetOrgInfo */

// Table 3
int JoinTables(void)
{
  struct sqlca sqlca;

  printf("\n-----------------------------------------------------------");
  printf("\nID     NAME      DEPT   JOB   YEARS  SALARY    COMM      DEPTNAME       MANAGER DIVISION   LOCATION\n");
  printf("------ --------- ------ ----- ------ --------- --------- -------------- ------- ---------- -------------\n");

  EXEC SQL DECLARE c3 CURSOR FOR
    SELECT id, name, dept, job, years, salary, comm, deptname, manager, division, location
      FROM staff s, org o
      WHERE s.dept = o.deptnumb
      ORDER BY dept, salary desc;


  EXEC SQL OPEN c3;
  /* EMB_SQL_CHECK("Cursor -- Open"); */

  EXEC SQL FETCH c3 INTO :id, :name, :dept, :job, :years:yearNullInd, :salary, :comm:commNullInd, :deptName, :manager, :division, :location;
  /* EMB_SQL_CHECK("Cursor -- Fetch"); */

  if (sqlca.sqlcode == 100)
  {
    printf("\n  Data not found.\n");
  }

  while (sqlca.sqlcode != 100)
  {
    printf("%6d %-9.9s %6d %-5.5s ", id, name, dept, job);
    if (yearNullInd == -1) {
      printf("     - ") ;
    } else {
      printf("%6d ", years);
    }
    printf("%9.2f ", salary);
    if (commNullInd == -1) {
      printf("        - ");
    } else {
      printf("%9.2f ", comm);
    }
    printf("%-14.14s %7d %-10.10s %-13.13s\n", deptName, manager, division, location);


    EXEC SQL FETCH c3 INTO :id, :name, :dept, :job, :years:yearNullInd, :salary, :comm:commNullInd, :deptName, :manager, :division, :location;
    /* EMB_SQL_CHECK("Cursor -- Fetch"); */ 
  }

  EXEC SQL CLOSE staffCursor;
  /* EMB_SQL_CHECK("Cursor -- Close"); */
  
  return 0;
} /* JoinTables */